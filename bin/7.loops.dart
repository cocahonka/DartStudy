void main() {
  // Обучение циклам
  // 1. Цикл for
  // 2. Цикл while
  // 3. Цикл do-while
  // 4. Цикл for-in (разберем позже, когда изучим коллекции)
  // 5. Цикл forEach (разберем позже, когда изучим коллекции и анонимные функции)

  //* 1. Цикл for
  // for (инициализация; условие; итерация) {
  //     тело цикла
  // }

  // В блоке инициализации можно объявить переменную итерации, которая будет доступна только внутри цикла.
  // В блоке условия можно поставить условие, при котором цикл будет завершен.
  // В блоке итерации можно изменить переменную итерации, которая будет доступна только внутри цикла.

  //* Следите за тем, чтобы цикл не работал бесконечно, иначе программа зависнет.

  // Примеры:
  // вывод чисел от 0 до 9
  print('loop 1');
  for (int i = 0; i < 10; i++) {
    print(i);
  }

  // Цикл for с переменной String
  print('\nloop 2');
  for (String phrase = 'a'; phrase != 'a' * 10; phrase += 'a') {
    print(phrase);
  }
  // вывод строк от a до aaaaaaaaa

  // Вложенный цикл for c выводом таблицы умножения от 5 до 7
  print('\nloop 3');
  for (int i = 5; i <= 7; i++) {
    for (int j = 5; j <= 7; j++) {
      print('$i * $j = ${i * j}');
    }
  }

  //* 2. Цикл while
  // while (условие) {
  //     тело цикла
  // }

  // У цикла while переменная итерации должна быть объявлена до цикла, если она используется внутри цикла.

  // Примеры:
  // вывод чисел от 0 до 9
  print('\nloop 4');
  int i = 0;
  while (i < 10) {
    print(i);
    i++;
  }

  // Цикл while с переменной String
  print('\nloop 5');
  String phrase = 'a';
  while (phrase != 'a' * 10) {
    print(phrase);
    phrase += 'a';
  }

  // Вложенный цикл while c выводом таблицы умножения
  print('\nloop 6');
  i = 5;
  while (i <= 7) {
    int j = 5;
    while (j <= 7) {
      print('$i * $j = ${i * j}');
      j++;
    }
    i++;
  }

  // Цикл while вложен в цикл for
  print('\nloop 7');
  for (int i = 5; i <= 7; i++) {
    int j = 5;
    while (j <= 7) {
      print('$i * $j = ${i * j}');
      j++;
    }
  }

  //* 3. Цикл do-while
  // do {
  //     тело цикла
  // } while (условие);

  // У цикла do-while переменная итерации должна быть объявлена до цикла, если она используется внутри цикла.
  // Отличие от цикла while в том, что тело цикла выполнится хотя бы один раз, даже если условие не выполнится.

  // Примеры:
  // вывод чисел от 0 до 9
  print('\nloop 8');
  i = 0;
  do {
    print(i);
    i++;
  } while (i < 10);

  // Цикл do-while демонстрирует, что тело цикла выполнится хотя бы один раз, даже если условие не выполнится.
  print('\nloop 9');
  i = 10;
  do {
    print(i);
    i++;
  } while (i < 100);

  //* Операторы цикла break и continue
  // break - прерывает выполнение цикла
  // continue - прерывает выполнение текущей итерации цикла и переходит к следующей

  // Примеры:
  // вывод чисел от 0 до 9, но прерывается на 5
  print('\nloop 10');
  for (int i = 0; i < 10; i++) {
    if (i == 5) {
      break;
    }
    print(i);
  }

  // вывод чисел от 0 до 9, но пропускается 5
  print('\nloop 11');
  for (int i = 0; i < 10; i++) {
    if (i == 5) {
      continue;
    }
    print(i);
  }
}

void homework() {
  // Задание 1
  // Выведите на экран числа от 1 до 10 включительно, в обратном порядке.

  // Задание 2
  // Выведите на экран только четные числа от 1 до 10.

  // Задание 3
  // Выведите на экран только нечетные числа от 1 до 10.

  // Задание 7
  // Опеределить сумму цифр числа.
  // Например, сумма цифр числа 123 равна 6.

  // Задание 4
  // Задача fizzbuzz (https://en.wikipedia.org/wiki/Fizz_buzz)
  // Формулировка задачи:
  // Напишите программу, которая выводит на экран числа от 1 до 100.
  // При этом вместо чисел, кратных трем, программа должна выводить слово «Fizz»,
  // а вместо чисел, кратных пяти — слово «Buzz».
  // Если число кратно и 3, и 5, то программа должна выводить слово «FizzBuzz».

  // Задание 5
  // Задача на числа Фибоначчи (https://en.wikipedia.org/wiki/Fibonacci_number)
  // Формулировка задачи:
  // Напишите программу, которая выводит на экран первые 20 чисел Фибоначчи.
  // Числа Фибоначчи — это элементы числовой последовательности 0, 1, 1, 2, 3, 5, 8, 13, ...
  // Первые два числа равны 0 и 1, а каждое последующее число равно сумме двух предыдущих чисел.

  // Задание 6
  // Определить количество простых чисел в диапазоне от 1 до 100.
  // Простое число — это натуральное число, которое делится без остатка только на 1 и на само себя.

  // Задание 8
  // Перевести число из десятичной системы счисления в двоичную.
  // Например, число 13 в двоичной системе счисления равно 1101.
  // Решение
  // 13 / 2 = 6, остаток 1
  // 6 / 2 = 3, остаток 0
  // 3 / 2 = 1, остаток 1
  // 1 / 2 = 0, остаток 1
  // 1101
  // P.s выполнить это задание используя побитовые операции.
}
